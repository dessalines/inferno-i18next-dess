{"version":3,"file":"bundle.min.js","sources":["../src/Provider.js","../src/translate.js","../src/T.js"],"sourcesContent":["import { Component } from 'inferno';\nimport { throwError } from 'inferno-shared';\n\nexport default class Provider extends Component {\n\n  /**\n   * Create a new i18next provider instance.\n   *\n   * @param {object} props\n   * @param {object} context\n   * @throws {object} Error\n   * @returns {void}\n   */\n  constructor(props, context) {\n    super(props, context);\n    if (!props.i18next) {\n      throwError('an instance of i18next is required');\n    }\n  }\n\n  /**\n   * Return the context for child components.\n   *\n   * @returns {object}\n   */\n  getChildContext() {\n    return {i18next: this.props.i18next};\n  }\n\n  /**\n   * Handle the new props before it gets accepted.\n   *\n   * @param {object} nextProps\n   * @throws {object} Error\n   * @returns {void}\n   */\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.i18next !== this.props.i18next) {\n      throwError('changing of i18next instance is not supported');\n    }\n  }\n\n  /**\n   * Render the component.\n   *\n   * @returns {object}\n   */\n  render() {\n    return this.props.children;\n  }\n\n}\n","import { Component } from 'inferno';\nimport { createElement } from 'inferno-create-element';\nimport { isArray, isString, throwError } from 'inferno-shared';\n\n/**\n * Make the target component translatable.\n *\n * @param {object} TargetComponent\n * @param {string|array} ns\n * @returns {object}\n */\nfunction translate(TargetComponent, ns) {\n  class Translate extends Component {\n\n    /**\n     * Provided i18next instance.\n     *\n     * @type {object}\n     */\n    i18next;\n\n    /**\n     * Namespace/s to be used.\n     *\n     * @type {string|array}\n     */\n    ns;\n\n    /**\n     * Fixed i18next translate function.\n     *\n     * @type {function}\n     */\n    t;\n\n    /**\n     * Create a new translate HOC instance.\n     *\n     * @param {object} props\n     * @param {object} context\n     * @throws {object} Error\n     * @returns {void}\n     */\n    constructor(props, context) {\n      super(props, context);\n      if (!context.i18next) {\n        throwError('an instance of i18next must be provided');\n      }\n      this.i18next = context.i18next;\n      this.ns = ns || this.i18next.options.defaultNS;\n    }\n\n    /**\n     * Return the context for child components.\n     *\n     * @returns {object}\n     */\n    getChildContext() {\n      return {\n        t: this.t,\n        i18next: this.i18next,\n      };\n    }\n\n    /**\n     * Handle the component before it gets mounted to the DOM.\n     *\n     * @returns {void}\n     */\n    componentWillMount() {\n      this.t = this.i18next.getFixedT(null, this.ns);\n    }\n\n    /**\n     * Render the component.\n     *\n     * @returns {object}\n     */\n    render() {\n      return createElement(TargetComponent, {\n        ...this.props,\n        t: this.t,\n        i18next: this.i18next,\n      });\n    }\n\n  }\n\n  Translate.displayName = 'Translate' + getDisplayName(TargetComponent);\n  return Translate;\n}\n\n//  ____ ______________.___.____    .___________________.___.\n// |    |   \\__    ___/|   |    |   |   \\__    ___/\\__  |   |\n// |    |   / |    |   |   |    |   |   | |    |    /   |   |\n// |    |  /  |    |   |   |    |___|   | |    |    \\____   |\n// |______/   |____|   |___|_______ \\___| |____|    / ______|\n//                                 \\/               \\/\n\nfunction getDisplayName(component) {\n  return component.displayName || component.name || 'Component';\n}\n\n//  __      ____________    _____ _________________________________________\n// /  \\    /  \\______   \\  /  _  \\\\______   \\______   \\_   _____/\\______   \\\n// \\   \\/\\/   /|       _/ /  /_\\  \\|     ___/|     ___/|    __)_  |       _/\n//  \\        / |    |   \\/    |    \\    |    |    |    |        \\ |    |   \\\n//   \\__/\\  /  |____|_  /\\____|__  /____|    |____|   /_______  / |____|_  /\n//        \\/          \\/         \\/                           \\/         \\/\n\nexport default function wrap(arg) {\n  if (isString(arg) || isArray(arg)) {\n    return component => translate(component, arg);\n  }\n  return translate(arg);\n}\n","import { Component } from 'inferno';\nimport { cloneVNode } from 'inferno-clone-vnode';\nimport { createElement } from 'inferno-create-element';\nimport { VNodeFlags } from 'inferno-vnode-flags';\nimport HTML from 'html-parse-stringify2';\n\nfunction hasChildren(node) {\n\treturn node && (node.children || (node.props && node.props.children));\n}\n\nfunction getChildren(node) {\n\treturn node && (node.children ? node.children : node.props && node.props.children);\n}\n\nfunction renderNodes(children, targetString, i18n, interpolation) {\n\tif (targetString === '') return [];\n\n\t// parse ast from string with additional wrapper tag\n\t// -> avoids issues in parser removing prepending text nodes\n\tconst ast = HTML.parse(`<0>${targetString}</0>`);\n\n\tfunction mapAST(reactNodes, astNodes) {\n\t\treactNodes = reactNodes ? (Array.isArray(reactNodes) ? reactNodes : [reactNodes]) : [];\n\t\tastNodes = astNodes ? (Array.isArray(astNodes) ? astNodes : [astNodes]) : [];\n\n\t\tconst ne = astNodes.reduce((mem, node, i) => {\n\t\t\tif (node.type === 'tag') {\n\t\t\t\tconst child = reactNodes[parseInt(node.name, 10)] || reactNodes[0];\n\t\t\t\tconst isElement = isValidElement(child);\n\n\t\t\t\tif (hasChildren(child)) {\n\t\t\t\t\tconst inner = mapAST(getChildren(child), node.children);\n\t\t\t\t\tmem.push(cloneVNode(child, { ...child.props, key: i }, inner))\n\t\t\t\t} else {\n\t\t\t\t\tmem.push(child);\n\t\t\t\t}\n\t\t\t} else if (node.type === 'text') {\n\t\t\t\tconst interpolated = i18n.services.interpolator.interpolate(node.content, interpolation, i18n.language);\n\t\t\t\tmem.push(interpolated);\n\t\t\t}\n\t\t\treturn mem;\n\t\t}, []);\n\t\treturn ne\n\t}\n\n\t// call mapAST with having react nodes nested into additional node like\n\t// we did for the string ast from translation\n\t// return the children of that extra node to get expected result\n\tconst result = mapAST([{ dummy: true, children, flags: VNodeFlags.HtmlElement, type: 'div' }], ast);\n\treturn getChildren(result[0]);\n}\n\nfunction isValidElement(elem) {\n\t// is valid inferno vnode https://infernojs.org/docs/api/inferno\n\treturn (elem.flags & (VNodeFlags.Component | VNodeFlags.Element)) > 0;\n}\n\n\nexport default class T extends Component {\n\trender() {\n\t\tconst contextAndProps = { i18next: this.context.i18next, t: this.context.i18next.getFixedT(), ...this.props };\n\t\tconst { children, count, parent, i18nKey, i18next, t: tFromContextAndProps, ...additionalProps } = contextAndProps;\n\t\tconst t = tFromContextAndProps || i18next.t.bind(i18next);\n\n\t\tconst useAsParent = parent !== undefined ? parent : 'div';\n\n\t\tconst translation = i18nKey ? t(i18nKey, { interpolation: { prefix: '#$?', suffix: '?$#' }, count }) : '';\n\n\t\treturn createElement(\n\t\t\tuseAsParent,\n\t\t\tadditionalProps,\n\t\t\trenderNodes(children, translation, i18next, contextAndProps.interpolation)\n\t\t);\n\t}\n}\n"],"names":["Provider","props","context","i18next","throwError","Component","this","nextProps","children","translate","TargetComponent","ns","component","Translate","_this","options","defaultNS","t","getFixedT","createElement","displayName","name","getChildren","node","renderNodes","targetString","i18n","interpolation","ast","HTML","parse","mapAST","reactNodes","astNodes","Array","isArray","reduce","mem","i","type","child","parseInt","flags","VNodeFlags","Element","inner","push","cloneVNode","key","interpolated","services","interpolator","interpolate","content","language","dummy","HtmlElement","T","contextAndProps","count","parent","i18nKey","tFromContextAndProps","additionalProps","bind","useAsParent","undefined","translation","prefix","suffix","arg","isString"],"mappings":"k2EAGqBA,yBAUPC,EAAOC,kDACXD,EAAOC,IACRD,EAAME,SACTC,aAAW,mDAbqBC,gEAuB3B,CAACF,QAASG,KAAKL,MAAME,2DAUJI,GACpBA,EAAUJ,UAAYG,KAAKL,MAAME,SACnCC,aAAW,yFAUNE,KAAKL,MAAMO,kBCrCtB,SAASC,EAAUC,EAAiBC,OAwFZC,EAvFhBC,yBA+BQZ,EAAOC,wDACXD,EAAOC,qEACRA,EAAQC,SACXC,aAAW,6CAERD,QAAUD,EAAQC,UAClBQ,GAAKA,GAAMG,EAAKX,QAAQY,QAAQC,uBArCjBX,gEA8Cb,CACLY,EAAGX,KAAKW,EACRd,QAASG,KAAKH,2DAUXc,EAAIX,KAAKH,QAAQe,UAAU,KAAMZ,KAAKK,4CASpCQ,gBAAcT,OAChBJ,KAAKL,OACRgB,EAAGX,KAAKW,EACRd,QAASG,KAAKH,2BAMpBU,EAAUO,YAAc,cAWFR,EAX+BF,GAYpCU,aAAeR,EAAUS,MAAQ,aAX3CR,EC/ET,SAASS,EAAYC,UACbA,IAASA,EAAKf,SAAWe,EAAKf,SAAWe,EAAKtB,OAASsB,EAAKtB,MAAMO,UAG1E,SAASgB,EAAYhB,EAAUiB,EAAcC,EAAMC,MAC7B,KAAjBF,EAAqB,MAAO,OAI1BG,EAAMC,EAAKC,mBAAYL,kBA8BtBH,WA5BES,EAAOC,EAAYC,UAC3BD,EAAaA,EAAcE,MAAMC,QAAQH,GAAcA,EAAa,CAACA,GAAe,IACpFC,EAAWA,EAAYC,MAAMC,QAAQF,GAAYA,EAAW,CAACA,GAAa,IAEtDG,OAAO,SAACC,EAAKd,EAAMe,MACpB,QAAdf,EAAKgB,KAAgB,KAClBC,EAAQR,EAAWS,SAASlB,EAAKF,KAAM,MAAQW,EAAW,MAC/BQ,EA0BvBE,MAASC,aAAWtC,UAAYsC,aAAWC,SAhDpCrB,EAwBDiB,KAvBHjB,EAAKf,UAAae,EAAKtB,OAASsB,EAAKtB,MAAMO,UAuBhC,KACjBqC,EAAQd,EAAOT,EAAYkB,GAAQjB,EAAKf,UAC9C6B,EAAIS,KAAKC,aAAWP,OAAYA,EAAMvC,OAAO+C,IAAKV,IAAKO,SAEvDR,EAAIS,KAAKN,QAEJ,GAAkB,SAAdjB,EAAKgB,KAAiB,KAC1BU,EAAevB,EAAKwB,SAASC,aAAaC,YAAY7B,EAAK8B,QAAS1B,EAAeD,EAAK4B,UAC9FjB,EAAIS,KAAKG,GAhCb,IAAqB1B,SAkCXc,GACL,IAOWN,CAAO,CAAC,CAAEwB,OAAO,EAAM/C,SAAAA,EAAUkC,MAAOC,aAAWa,YAAajB,KAAM,QAAUX,GACrE,QASN6B,0FAAUpD,qDAEvBqD,KAAoBvD,QAASG,KAAKJ,QAAQC,QAASc,EAAGX,KAAKJ,QAAQC,QAAQe,aAAgBZ,KAAKL,OAC9FO,EAA2FkD,EAA3FlD,SAAUmD,EAAiFD,EAAjFC,MAAOC,EAA0EF,EAA1EE,OAAQC,EAAkEH,EAAlEG,QAAS1D,EAAyDuD,EAAzDvD,QAAY2D,EAA6CJ,EAAhDzC,EAA4B8C,IAAoBL,yDAC7FzC,EAAI6C,GAAwB3D,EAAQc,EAAE+C,KAAK7D,GAE3C8D,OAAyBC,IAAXN,EAAuBA,EAAS,MAE9CO,EAAcN,EAAU5C,EAAE4C,EAAS,CAAElC,cAAe,CAAEyC,OAAQ,MAAOC,OAAQ,OAASV,MAAAA,IAAW,UAEhGxC,gBACN8C,EACAF,EACAvC,EAAYhB,EAAU2D,EAAahE,EAASuD,EAAgB/B,kDDuChD,SAAc2C,UACvBC,WAASD,IAAQnC,UAAQmC,GACpB,SAAA1D,UAAaH,EAAUG,EAAW0D,IAEpC7D,EAAU6D"}